-- MAP ==============================================================================
-- 이미지 데이터 삭제 
DELETE FROM PLACE_IMG;
COMMIT;

SELECT 
    FP.FP_API_ID, 
    FP.FP_NAME, 
    PI.PLACE_IMG,
    FP.FP_ADDRESS,
    FP.FP_PHONE, 
    FP.FP_MAJOR_CATEGORY, 
    FP.FP_MINOR_CATEGORY  
FROM FAVORITE_PLACES FP 
JOIN PLACE_IMG PI ON (FP.FP_API_ID = PI.PLACE_API_ID)
WHERE USER_NO = 2;


-- USER =============================================================================
-- 모든 유저 정보 확인
SELECT
    USER_NO, USER_ID,
    USER_EMAIL, USER_NICKNAME,USER_BD,
    USER_GENDER,USER_AUTHORITY,
    USER_IMG,
    USER_AUTHORITY,USER_PROFILE_HEIGHT,USER_PROFILE_WEIGHT,
    TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS CREATE_DT,
    TO_CHAR(DELETE_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS DELETE_DT
FROM "USER_INFO"
WHERE DELETE_DT IS NULL;



-- CHAT =============================================================================
-- 모든 CHATROOMS ID 정보 확인
SELECT ROOM_NO FROM CHAT_ROOM;

SELECT CR.ROOM_NO FROM CHAT_ROOM CR
INNER JOIN CHAT_ROOM_MEMBER CRM ON (CR.ROOM_NO = CRM.ROOM_NO)
WHERE CRM.USER_NO = 1;

-- 본인이 포함되어있는 CHATROOMS 모두 조회
SELECT 
    CR.ROOM_NO, 
    CR.ROOM_NAME,
    U.USER_ID,
    U.USER_IMG, 
    TO_CHAR(CR.CREATE_DT, 'RRRR-MM-DD HH24:MM:SS') CREATE_DT, 
    CR.CREATE_USER_NO, 
    U.USER_NICKNAME, 
    U.USER_EMAIL,
    U.USER_IMG,
    (SELECT MESSAGE_CONTENT
        FROM (   
            SELECT M.MESSAGE_CONTENT
            FROM MESSAGE M
            WHERE M.ROOM_NO = CR.ROOM_NO
            ORDER BY M.SEND_TIME DESC
        ) 
        WHERE ROWNUM = 1
    ) AS LAST_MESSAGE,
    (SELECT COUNT(M.MESSAGE_NO)
        FROM MESSAGE M
        WHERE M.ROOM_NO = CR.ROOM_NO
        AND U.USER_NO = 1
        AND CRM.LAST_READ_TIME < M.SEND_TIME
    ) AS NOT_READ_CNT
FROM CHAT_ROOM_MEMBER CRM
JOIN CHAT_ROOM CR ON (CR.ROOM_NO = CRM.ROOM_NO)
JOIN USER_INFO U ON (CR.CREATE_USER_NO = U.USER_NO)
WHERE CRM.USER_NO = 1;

-- CHATROOM 안에 있는 유저 조회
SELECT 
    USER_NO, 
    USER_EMAIL, 
    USER_NICKNAME, 
    USER_IMG,
    LAST_READ_TIME
FROM CHAT_ROOM_MEMBER
JOIN USER_INFO USING(USER_NO)
WHERE ROOM_NO = 3;

-- CHATROOM 안의 메시지 조회
SELECT M.MESSAGE_NO, 
    M.MESSAGE_CONTENT, 
    M.SENDER_NO, 
    U.USER_NICKNAME SENDER_NICKNAME,
    U.USER_IMG SENDER_IMG,
    M.ROOM_NO,
    CR.ROOM_NAME,
    M.SEND_TIME
FROM MESSAGE M
JOIN USER_INFO U ON (M.SENDER_NO = U.USER_NO)
JOIN CHAT_ROOM CR ON (M.ROOM_NO = CR.ROOM_NO)
WHERE M.ROOM_NO = 2;

-- CHAT USER 조회
SELECT USER_NO, USER_NICKNAME, USER_IMG  FROM USER_INFO
WHERE USER_NICKNAME LIKE '%불타%';

-- CHAT USER 한명 조회
SELECT USER_NO, USER_NICKNAME, USER_IMG  FROM USER_INFO
WHERE USER_NO = 1;

-- 마이페이지 =============================================================================
-- 작성한 게시글 정보
SELECT
    B.BOARD_NO, B.BOARD_TITLE, U.USER_NICKNAME, B.BOARD_CNT, B.BOARD_TYPE, T.TYPE_NAME,
    CASE  
        WHEN SYSDATE - B.CREATE_DT < 1/24/60
        THEN FLOOR( (SYSDATE - B.CREATE_DT) * 24 * 60 * 60 ) || '초 전'
        WHEN SYSDATE - B.CREATE_DT < 1/24
        THEN FLOOR( (SYSDATE - B.CREATE_DT) * 24 * 60) || '분 전'
        WHEN SYSDATE - B.CREATE_DT < 1
        THEN FLOOR( (SYSDATE - B.CREATE_DT) * 24) || '시간 전'
        ELSE TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD')
    END AS CREATE_DT,
    (
        SELECT COUNT(*)
        FROM "LIKE" L
        WHERE L.LIKE_TARGET_NO = B.BOARD_NO) AS LIKE_COUNT
FROM "BOARD" B
JOIN "USER_INFO" U ON B.USER_NO = U.USER_NO
JOIN "BOARD_TYPE" T ON B.BOARD_TYPE = T.TYPE_NO
WHERE B.BOARD_ST = 'N'
        AND B.USER_NO = 2
ORDER BY B.BOARD_NO DESC;


-- 유저 운동정보
SELECT UW.USER_WORKOUT_NO,
        UW.USER_NO,
        UW.WORKOUT_NO,
        UW.WORKOUT_TIME,
        W.WORKOUT_NAME,
        WAT.WORKOUT_AN_TYPE_NO,
        WAT.WORKOUT_AN_TYPE_NAME,
        UW.USER_WEIGHT,
        UW.WORKOUT_DATE,
        UW.WORKOUT_DISTANCE,
        UW.WORKOUT_CAL
FROM USER_WORKOUT UW
JOIN WORKOUT W ON UW.WORKOUT_NO = W.WORKOUT_NO
JOIN WORKOUT_AN_TYPE WAT ON W.WORKOUT_AN_TYPE_NO = WAT.WORKOUT_AN_TYPE_NO
WHERE UW.USER_NO = 2
ORDER BY UW.WORKOUT_DATE DESC;


-- 유저 로그인정보
SELECT HISTORY_NO,
        USER_NO,
        LOGIN_DT,
        LOGIN_AUTO,
        LOGIN_IP
FROM USER_HISTORY
WHERE USER_NO = 2
ORDER BY LOGIN_DT DESC;

-- 유저 댓글 정보
SELECT R.REPLY_NO, R.REPLY_TYPE_NO, RT.REPLY_TYPE, R.REPLY_TARGET_NO, 
    CASE
        WHEN R.REPLY_TYPE_NO = 1 THEN B.BOARD_TITLE
        WHEN R.REPLY_TYPE_NO = 2 THEN REC.RECIPE_TITLE
        WHEN R.REPLY_TYPE_NO = 3 THEN PI.PLACE_NAME
        WHEN R.REPLY_TYPE_NO = 4 THEN F.FOOD_NAME
    END AS TARGET_TITLE,
    R.REPLY_CONTENT,
    R.REPLY_STAR,
    R.PARENT_NO,
    R.REPLY_DT
FROM REPLY R
JOIN REPLY_TYPE RT ON R.REPLY_TYPE_NO = RT.REPLY_TYPE_NO
LEFT JOIN BOARD B ON R.REPLY_TYPE_NO = 1 AND R.REPLY_TARGET_NO = B.BOARD_NO -- 일반게시물 (다이어리, 챌린지)
LEFT JOIN RECIPE REC ON R.REPLY_TYPE_NO = 2 AND R.REPLY_TARGET_NO = REC.RECIPE_NO -- 레시피 게시물
LEFT JOIN PLACE_IMG PI ON R.REPLY_TYPE_NO = 3 AND R.REPLY_TARGET_NO = PI.PLACE_API_ID -- 지도 상세
LEFT JOIN FOOD F ON R.REPLY_TYPE_NO = 4 AND R.REPLY_TARGET_NO = F.FOOD_NO -- 음식정보
WHERE R.USER_NO = 1
    AND R.REPLY_ST = 'N'
ORDER BY R.REPLY_DT DESC;
